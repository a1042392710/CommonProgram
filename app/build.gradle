apply plugin: 'com.android.application'
apply from: 'tinker-support.gradle'
apply plugin: 'walle'
android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.huayuan.oa"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 4
        versionName "1.0.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    //通过Gradle打包
    signingConfigs {
        release {
            storeFile file('/Users/jiangxihuayuan/Downloads/huayuan_oa.jks')
            storePassword "jxhy666888"
            keyAlias "huayuan_oa"
            keyPassword "jxhy666888"
        }
    }

    defaultConfig {
        applicationId "com.huayuan.oa" //JPush 上注册的包名.
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "6c852bcb12cd801e832fd24f", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]
    }

    //修改apk名称
//    android.applicationVariants.all {
//        variant ->
//            variant.outputs.all {
//                output ->
//                    def outputFile = output.outputFile
//                    if (outputFile.name.contains("release")) {
//                        def fileName = "OA_${variant.versionName}" + "_${variant.name}.apk"
//                        outputFileName = new File("../release/", fileName)
//                    } else if (outputFile.name.contains("debug")) {
//                        def fileName = "OA_${variant.versionName}" + "_${variant.name}.apk"
//                        outputFileName = new File("../debug/", fileName)
//                    }
//            }
//    }

    buildTypes {
        debug {
            //debug时使用release签名
//            signingConfig signingConfigs.release
//            //移除无用资源
//            shrinkResources true
//            //混淆
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

        release {
            lintOptions {

                checkReleaseBuilds false

                abortOnError false

            }
            // 通过 Gradle 打包apk
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            //加载默认混淆配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        //使用Java8 新特性
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = []    //disable automatic ndk-build
        }
    }
}

walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels");
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk';
    // 渠道配置文件
    channelFile = new File("${project.getProjectDir()}/channel")
}

dependencies {
    implementation fileTree( dir: 'libs',include: ['*.jar'])
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:28.0.0-rc01'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //********************************  网络请求整体框架

    implementation 'io.reactivex.rxjava2:rxjava:2.0.7'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // Retrofit库
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    //转换器，请求结果转换成Model
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    //配合Rxjava 使用
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    //打印 网络请求日志
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'

    // *******************************  第三方功能库

    //recyclerview
    implementation 'com.android.support:recyclerview-v7:28.+'
    //图片处理框架
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    //知乎图片选择器
    implementation 'com.zhihu.android:matisse:0.4.3'
    //事件总线
    implementation 'org.greenrobot:eventbus:3.0.0'
    //右滑返回
    implementation 'me.imid.swipebacklayout.lib:library:1.1.0'
    //底部导航
    implementation 'com.github.chaychan:BottomBarLayout:1.1.2'
    //Material Design
    implementation 'com.android.support:design:28.0.0'
    //图片放大缩小库
    implementation'com.github.chrisbanes:PhotoView:2.1.3'
    //图片压缩，仿微信朋友圈
    implementation 'top.zibin:Luban:1.1.8'
    //屏幕适配
    implementation 'me.jessyan:autosize:1.0.1'
    //小红点
    implementation 'q.rorbin:badgeview:1.1.3'
    //处理无网络情况的view
    implementation 'com.github.medyo:dynamicbox:1.2@aar'
    //刷新控件
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-14'
    //没有使用特殊Header，可以不加这行
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-14'


    // *******************************  项目工具

    //内存检测工具
    debugApi 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseApi 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    //注解框架
    implementation 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'

    //Android 6.0 权限适配
    implementation 'com.github.hotchemi:permissionsdispatcher:2.3.1'
    annotationProcessor 'com.github.hotchemi:permissionsdispatcher-processor:2.3.1'

    //bugly热更新
    implementation "com.android.support:multidex:1.0.1" // 多dex配置
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.5'
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.6'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'

    //瓦力多渠道打包
    implementation 'com.meituan.android.walle:library:1.1.6'

    //极光推送
    implementation 'cn.jiguang.sdk:jpush:3.1.6'  // 此处以JPush 3.1.6 版本为例。
    implementation 'cn.jiguang.sdk:jcore:1.2.5'  // 此处以JCore 1.2.5 版本为例。


}
